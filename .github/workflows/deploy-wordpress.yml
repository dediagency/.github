name: Deploy WordPress Application

on:
  workflow_call:
    inputs:
      # === OBLIGATOIRE - À personnaliser ===
      ssh_username:
        description: 'SSH username for deployment (ex: monprojet-wp)'
        required: true
        type: string

      project_name:
        description: 'Project name for URL generation (ex: monprojet)'
        required: true
        type: string

      environment:
        description: 'Environment (recette, preproduction, production)'
        required: true
        type: string

      # === OPTIONNEL - Surcharges WordPress ===
      wordpress_type:
        description: 'WordPress type (bedrock or standard)'
        required: false
        type: string
        default: 'bedrock'
      ssh_host:
        description: 'SSH host (default: preprod.dediagency.net)'
        required: false
        type: string
      custom_post_deploy:
        description: 'Custom post-deploy commands (JSON array)'
        required: false
        type: string

    secrets:
      ssh_private_key:
        description: 'SSH private key'
        required: false

    outputs:
      deployment_url:
        description: "URL of the deployed WordPress application"
        value: ${{ jobs.deploy.outputs.deployment_url }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment }}
      url: ${{ format('https://{0}-{1}.dediagency.dev', inputs.environment, inputs.project_name) }}

    outputs:
      deployment_url: ${{ format('https://{0}-{1}.dediagency.dev', inputs.environment, inputs.project_name) }}

    steps:
      - name: Deploy WordPress to ${{ inputs.environment }}
        uses: dediagency/.github/actions/deploy@v0
        with:
          # Infrastructure
          ssh_host: ${{ inputs.ssh_host }}
          ssh_username: ${{ inputs.ssh_username }}
          ssh_private_key: ${{ secrets.ssh_private_key }}

          # Environment
          environment: ${{ inputs.environment }}
          branch: ${{
            inputs.environment == 'recette' && 'develop' ||
            inputs.environment == 'preproduction' && 'staging' ||
            inputs.environment == 'production' && 'main' ||
            'develop'
          }}

          # Platform WordPress
          platform: wordpress
          php_version: ${{ inputs.php_version }}
          build_command: ${{ inputs.build_command }}

          # Permissions (standard pour WordPress)
          permission_method: chmod
          file_permissions: "755"
          var_permissions: "775"

          # Shared directories (WordPress/Bedrock)
          shared_dirs: ${{
            inputs.wordpress_type == 'bedrock' && '["web/app/uploads", "storage/logs"]' ||
            '["wp-content/uploads", "wp-content/cache"]'
          }}

          shared_files: ${{
            inputs.wordpress_type == 'bedrock' && '[".env"]' ||
            '["wp-config.php"]'
          }}

          # Database operations (WordPress ne nécessite généralement pas de migrations)
          db_operations: '[]'

          # Cache et assets (pas de cache Symfony pour WordPress)
          cache_commands: '[]'
          asset_commands: '[]'

          # Post-deployment (WordPress spécifique)
          run_post_deploy_cmd: false
          post_deploy_commands: ${{
            inputs.custom_post_deploy ||
            (inputs.wordpress_type == 'bedrock' && format('[
              "wp cache flush --path=web/wp --allow-root || echo \"WP-CLI cache flush failed\"",
              "curl -f https://{0}-{1}.dediagency.dev/ || echo \"Health check failed for {0}\""
            ]', inputs.environment, inputs.project_name)) ||
            format('[
              "wp cache flush --allow-root || echo \"WP-CLI cache flush failed\"",
              "curl -f https://{0}-{1}.dediagency.dev/ || echo \"Health check failed for {0}\""
            ]', inputs.environment, inputs.project_name)
          }}